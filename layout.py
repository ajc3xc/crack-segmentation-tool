# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1928, 1028)
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1921, 1011))
        self.tabWidget.setToolTip("")
        self.tabWidget.setToolTipDuration(1000000000)
        self.tabWidget.setWhatsThis("")
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.select_points_button = QtWidgets.QPushButton(self.tab)
        self.select_points_button.setGeometry(QtCore.QRect(10, 200, 151, 31))
        self.select_points_button.setToolTipDuration(1000000000)
        self.select_points_button.setObjectName("select_points_button")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(0, 170, 71, 16))
        self.label.setStyleSheet("color: rgb(0, 0, 0);")
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setObjectName("label")
        self.track_display = QtWidgets.QLabel(self.tab)
        self.track_display.setGeometry(QtCore.QRect(1100, 480, 815, 450))
        self.track_display.setFrameShape(QtWidgets.QFrame.Box)
        self.track_display.setText("")
        self.track_display.setAlignment(QtCore.Qt.AlignCenter)
        self.track_display.setObjectName("track_display")
        self.cost_display = QtWidgets.QLabel(self.tab)
        self.cost_display.setGeometry(QtCore.QRect(1100, 0, 815, 450))
        self.cost_display.setFrameShape(QtWidgets.QFrame.Box)
        self.cost_display.setText("")
        self.cost_display.setAlignment(QtCore.Qt.AlignCenter)
        self.cost_display.setObjectName("cost_display")
        self.sigmas_line_edit = QtWidgets.QLineEdit(self.tab)
        self.sigmas_line_edit.setGeometry(QtCore.QRect(1050, 160, 51, 22))
        self.sigmas_line_edit.setObjectName("sigmas_line_edit")
        self.label_17 = QtWidgets.QLabel(self.tab)
        self.label_17.setGeometry(QtCore.QRect(990, 160, 51, 20))
        self.label_17.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_17.setTextFormat(QtCore.Qt.AutoText)
        self.label_17.setObjectName("label_17")
        self.label_16 = QtWidgets.QLabel(self.tab)
        self.label_16.setGeometry(QtCore.QRect(990, 130, 51, 20))
        self.label_16.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_16.setTextFormat(QtCore.Qt.AutoText)
        self.label_16.setObjectName("label_16")
        self.power_box = QtWidgets.QDoubleSpinBox(self.tab)
        self.power_box.setGeometry(QtCore.QRect(1050, 130, 51, 22))
        self.power_box.setSingleStep(0.1)
        self.power_box.setProperty("value", 1.5)
        self.power_box.setObjectName("power_box")
        self.lambda_box = QtWidgets.QSpinBox(self.tab)
        self.lambda_box.setGeometry(QtCore.QRect(1050, 100, 51, 22))
        self.lambda_box.setToolTipDuration(1000000000)
        self.lambda_box.setMaximum(100000)
        self.lambda_box.setProperty("value", 200)
        self.lambda_box.setObjectName("lambda_box")
        self.label_15 = QtWidgets.QLabel(self.tab)
        self.label_15.setGeometry(QtCore.QRect(990, 100, 41, 20))
        self.label_15.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_15.setTextFormat(QtCore.Qt.AutoText)
        self.label_15.setObjectName("label_15")
        self.update_os_button = QtWidgets.QPushButton(self.tab)
        self.update_os_button.setGeometry(QtCore.QRect(1010, 0, 93, 28))
        self.update_os_button.setObjectName("update_os_button")
        self.os_progress_bar = QtWidgets.QProgressBar(self.tab)
        self.os_progress_bar.setGeometry(QtCore.QRect(1010, 30, 71, 23))
        self.os_progress_bar.setStyleSheet("color: rgb(0, 0, 0);")
        self.os_progress_bar.setProperty("value", 0)
        self.os_progress_bar.setObjectName("os_progress_bar")
        self.show_os_button = QtWidgets.QPushButton(self.tab)
        self.show_os_button.setGeometry(QtCore.QRect(1010, 60, 93, 28))
        self.show_os_button.setObjectName("show_os_button")
        self.update_cost_button = QtWidgets.QPushButton(self.tab)
        self.update_cost_button.setGeometry(QtCore.QRect(1010, 400, 93, 28))
        self.update_cost_button.setObjectName("update_cost_button")
        self.update_cost_bar = QtWidgets.QProgressBar(self.tab)
        self.update_cost_bar.setGeometry(QtCore.QRect(1010, 430, 91, 23))
        self.update_cost_bar.setStyleSheet("color: rgb(0, 0, 0);")
        self.update_cost_bar.setProperty("value", 0)
        self.update_cost_bar.setObjectName("update_cost_bar")
        self.select_image_size = QtWidgets.QSpinBox(self.tab)
        self.select_image_size.setGeometry(QtCore.QRect(120, 170, 42, 22))
        self.select_image_size.setToolTipDuration(1000000000)
        self.select_image_size.setProperty("value", 3)
        self.select_image_size.setObjectName("select_image_size")
        self.start_button = QtWidgets.QPushButton(self.tab)
        self.start_button.setGeometry(QtCore.QRect(10, 10, 93, 28))
        self.start_button.setMouseTracking(False)
        self.start_button.setToolTipDuration(1000000000)
        self.start_button.setStatusTip("")
        self.start_button.setWhatsThis("")
        self.start_button.setAccessibleDescription("")
        self.start_button.setObjectName("start_button")
        self.tracking_bar = QtWidgets.QProgressBar(self.tab)
        self.tracking_bar.setGeometry(QtCore.QRect(1010, 680, 91, 23))
        self.tracking_bar.setStyleSheet("color: rgb(255, 255, 255);")
        self.tracking_bar.setProperty("value", 0)
        self.tracking_bar.setObjectName("tracking_bar")
        self.midline_track_button = QtWidgets.QPushButton(self.tab)
        self.midline_track_button.setGeometry(QtCore.QRect(1010, 650, 93, 28))
        self.midline_track_button.setObjectName("midline_track_button")
        self.crack_color_box = QtWidgets.QComboBox(self.tab)
        self.crack_color_box.setGeometry(QtCore.QRect(70, 290, 91, 22))
        self.crack_color_box.setToolTipDuration(1000000000)
        self.crack_color_box.setObjectName("crack_color_box")
        self.crack_color_box.addItem("")
        self.crack_color_box.addItem("")
        self.downsample_factor_box = QtWidgets.QSpinBox(self.tab)
        self.downsample_factor_box.setGeometry(QtCore.QRect(120, 370, 42, 22))
        self.downsample_factor_box.setToolTipDuration(1000000000)
        self.downsample_factor_box.setProperty("value", 1)
        self.downsample_factor_box.setObjectName("downsample_factor_box")
        self.label_5 = QtWidgets.QLabel(self.tab)
        self.label_5.setGeometry(QtCore.QRect(0, 370, 111, 16))
        self.label_5.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setObjectName("label_5")
        self.update_image_crop_button = QtWidgets.QPushButton(self.tab)
        self.update_image_crop_button.setGeometry(QtCore.QRect(20, 550, 141, 28))
        self.update_image_crop_button.setToolTipDuration(1000000000)
        self.update_image_crop_button.setObjectName("update_image_crop_button")
        self.label_2 = QtWidgets.QLabel(self.tab)
        self.label_2.setGeometry(QtCore.QRect(0, 330, 81, 16))
        self.label_2.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setObjectName("label_2")
        self.color_chenel_box = QtWidgets.QComboBox(self.tab)
        self.color_chenel_box.setGeometry(QtCore.QRect(120, 330, 41, 22))
        self.color_chenel_box.setToolTipDuration(1000000000)
        self.color_chenel_box.setFrame(True)
        self.color_chenel_box.setObjectName("color_chenel_box")
        self.color_chenel_box.addItem("")
        self.color_chenel_box.addItem("")
        self.color_chenel_box.addItem("")
        self.label_3 = QtWidgets.QLabel(self.tab)
        self.label_3.setGeometry(QtCore.QRect(0, 410, 55, 16))
        self.label_3.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setObjectName("label_3")
        self.x_margin_box = QtWidgets.QSpinBox(self.tab)
        self.x_margin_box.setGeometry(QtCore.QRect(111, 410, 51, 22))
        self.x_margin_box.setToolTipDuration(1000000000)
        self.x_margin_box.setMaximum(1000)
        self.x_margin_box.setProperty("value", 20)
        self.x_margin_box.setObjectName("x_margin_box")
        self.y_margin_box = QtWidgets.QSpinBox(self.tab)
        self.y_margin_box.setGeometry(QtCore.QRect(111, 450, 51, 22))
        self.y_margin_box.setMaximum(1000)
        self.y_margin_box.setProperty("value", 20)
        self.y_margin_box.setObjectName("y_margin_box")
        self.label_4 = QtWidgets.QLabel(self.tab)
        self.label_4.setGeometry(QtCore.QRect(0, 450, 55, 16))
        self.label_4.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_4.setTextFormat(QtCore.Qt.AutoText)
        self.label_4.setObjectName("label_4")
        self.image_crop_down_display = QtWidgets.QLabel(self.tab)
        self.image_crop_down_display.setGeometry(QtCore.QRect(160, 130, 815, 450))
        self.image_crop_down_display.setFrameShape(QtWidgets.QFrame.Box)
        self.image_crop_down_display.setText("")
        self.image_crop_down_display.setScaledContents(False)
        self.image_crop_down_display.setAlignment(QtCore.Qt.AlignCenter)
        self.image_crop_down_display.setObjectName("image_crop_down_display")
        self.middlepoint_display = QtWidgets.QLabel(self.tab)
        self.middlepoint_display.setGeometry(QtCore.QRect(690, 660, 270, 270))
        self.middlepoint_display.setFrameShape(QtWidgets.QFrame.Box)
        self.middlepoint_display.setText("")
        self.middlepoint_display.setObjectName("middlepoint_display")
        self.middpoint_update_button = QtWidgets.QPushButton(self.tab)
        self.middpoint_update_button.setGeometry(QtCore.QRect(620, 900, 71, 28))
        self.middpoint_update_button.setObjectName("middpoint_update_button")
        self.middle_point_button = QtWidgets.QPushButton(self.tab)
        self.middle_point_button.setGeometry(QtCore.QRect(490, 660, 201, 28))
        self.middle_point_button.setToolTipDuration(1000000000)
        self.middle_point_button.setObjectName("middle_point_button")
        self.wavelet_check_display = QtWidgets.QLabel(self.tab)
        self.wavelet_check_display.setGeometry(QtCore.QRect(190, 660, 270, 270))
        self.wavelet_check_display.setFrameShape(QtWidgets.QFrame.Box)
        self.wavelet_check_display.setText("")
        self.wavelet_check_display.setScaledContents(False)
        self.wavelet_check_display.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.wavelet_check_display.setObjectName("wavelet_check_display")
        self.wavelet_button = QtWidgets.QPushButton(self.tab)
        self.wavelet_button.setGeometry(QtCore.QRect(60, 900, 131, 28))
        self.wavelet_button.setObjectName("wavelet_button")
        self.wavelet_size_box = QtWidgets.QSpinBox(self.tab)
        self.wavelet_size_box.setGeometry(QtCore.QRect(140, 810, 51, 22))
        self.wavelet_size_box.setMaximum(999)
        self.wavelet_size_box.setProperty("value", 70)
        self.wavelet_size_box.setObjectName("wavelet_size_box")
        self.label_7 = QtWidgets.QLabel(self.tab)
        self.label_7.setGeometry(QtCore.QRect(0, 820, 81, 16))
        self.label_7.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.tab)
        self.label_8.setGeometry(QtCore.QRect(0, 720, 141, 16))
        self.label_8.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_8.setTextFormat(QtCore.Qt.RichText)
        self.label_8.setScaledContents(False)
        self.label_8.setIndent(-1)
        self.label_8.setObjectName("label_8")
        self.wavelet_norientations_box = QtWidgets.QSpinBox(self.tab)
        self.wavelet_norientations_box.setGeometry(QtCore.QRect(140, 720, 51, 22))
        self.wavelet_norientations_box.setProperty("value", 32)
        self.wavelet_norientations_box.setObjectName("wavelet_norientations_box")
        self.wavelet_inflection_point_box = QtWidgets.QDoubleSpinBox(self.tab)
        self.wavelet_inflection_point_box.setGeometry(QtCore.QRect(140, 660, 51, 22))
        self.wavelet_inflection_point_box.setToolTipDuration(1000000000)
        self.wavelet_inflection_point_box.setMaximum(1.0)
        self.wavelet_inflection_point_box.setSingleStep(0.1)
        self.wavelet_inflection_point_box.setProperty("value", 0.5)
        self.wavelet_inflection_point_box.setObjectName("wavelet_inflection_point_box")
        self.label_9 = QtWidgets.QLabel(self.tab)
        self.label_9.setGeometry(QtCore.QRect(0, 660, 91, 16))
        self.label_9.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_9.setObjectName("label_9")
        self.wavelet_overlap_factor_box = QtWidgets.QSpinBox(self.tab)
        self.wavelet_overlap_factor_box.setGeometry(QtCore.QRect(141, 750, 51, 22))
        self.wavelet_overlap_factor_box.setProperty("value", 1)
        self.wavelet_overlap_factor_box.setObjectName("wavelet_overlap_factor_box")
        self.label_10 = QtWidgets.QLabel(self.tab)
        self.label_10.setGeometry(QtCore.QRect(0, 750, 81, 16))
        self.label_10.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_10.setTextFormat(QtCore.Qt.AutoText)
        self.label_10.setObjectName("label_10")
        self.wavelet_STD_box = QtWidgets.QSpinBox(self.tab)
        self.wavelet_STD_box.setGeometry(QtCore.QRect(140, 690, 51, 22))
        self.wavelet_STD_box.setProperty("value", 8)
        self.wavelet_STD_box.setObjectName("wavelet_STD_box")
        self.label_11 = QtWidgets.QLabel(self.tab)
        self.label_11.setGeometry(QtCore.QRect(0, 690, 55, 16))
        self.label_11.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_11.setTextFormat(QtCore.Qt.AutoText)
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.tab)
        self.label_12.setGeometry(QtCore.QRect(0, 850, 71, 16))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setStyleStrategy(QtGui.QFont.NoAntialias)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_12.setTextFormat(QtCore.Qt.AutoText)
        self.label_12.setObjectName("label_12")
        self.wavelet_window_size_box = QtWidgets.QSpinBox(self.tab)
        self.wavelet_window_size_box.setGeometry(QtCore.QRect(140, 840, 51, 22))
        self.wavelet_window_size_box.setProperty("value", 70)
        self.wavelet_window_size_box.setObjectName("wavelet_window_size_box")
        self.wavelet_mnorder_box = QtWidgets.QSpinBox(self.tab)
        self.wavelet_mnorder_box.setGeometry(QtCore.QRect(141, 780, 51, 22))
        self.wavelet_mnorder_box.setProperty("value", 8)
        self.wavelet_mnorder_box.setObjectName("wavelet_mnorder_box")
        self.label_13 = QtWidgets.QLabel(self.tab)
        self.label_13.setGeometry(QtCore.QRect(0, 780, 61, 16))
        self.label_13.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_13.setTextFormat(QtCore.Qt.AutoText)
        self.label_13.setObjectName("label_13")
        self.line = QtWidgets.QFrame(self.tab)
        self.line.setGeometry(QtCore.QRect(970, 0, 20, 971))
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(3)
        self.line.setMidLineWidth(3)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setObjectName("line")
        self.g11_box = QtWidgets.QSpinBox(self.tab)
        self.g11_box.setGeometry(QtCore.QRect(1051, 480, 51, 22))
        self.g11_box.setToolTipDuration(1000000000)
        self.g11_box.setMaximum(999999)
        self.g11_box.setProperty("value", 1)
        self.g11_box.setObjectName("g11_box")
        self.label_6 = QtWidgets.QLabel(self.tab)
        self.label_6.setGeometry(QtCore.QRect(990, 480, 55, 16))
        self.label_6.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_6.setObjectName("label_6")
        self.g22_box = QtWidgets.QSpinBox(self.tab)
        self.g22_box.setGeometry(QtCore.QRect(1051, 510, 51, 22))
        self.g22_box.setToolTipDuration(1000000000)
        self.g22_box.setMaximum(999999)
        self.g22_box.setSingleStep(50)
        self.g22_box.setProperty("value", 100)
        self.g22_box.setObjectName("g22_box")
        self.g33_box = QtWidgets.QSpinBox(self.tab)
        self.g33_box.setGeometry(QtCore.QRect(1051, 540, 51, 22))
        self.g33_box.setToolTipDuration(1000000000)
        self.g33_box.setMaximum(999999)
        self.g33_box.setSingleStep(50)
        self.g33_box.setProperty("value", 100)
        self.g33_box.setObjectName("g33_box")
        self.label_14 = QtWidgets.QLabel(self.tab)
        self.label_14.setGeometry(QtCore.QRect(990, 510, 55, 16))
        self.label_14.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_14.setTextFormat(QtCore.Qt.AutoText)
        self.label_14.setObjectName("label_14")
        self.label_18 = QtWidgets.QLabel(self.tab)
        self.label_18.setGeometry(QtCore.QRect(990, 540, 55, 16))
        self.label_18.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_18.setTextFormat(QtCore.Qt.AutoText)
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.tab)
        self.label_19.setGeometry(QtCore.QRect(990, 750, 71, 16))
        self.label_19.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_19.setTextFormat(QtCore.Qt.AutoText)
        self.label_19.setObjectName("label_19")
        self.track_width_box = QtWidgets.QSpinBox(self.tab)
        self.track_width_box.setGeometry(QtCore.QRect(1060, 750, 42, 22))
        self.track_width_box.setProperty("value", 1)
        self.track_width_box.setObjectName("track_width_box")
        self.update_track_display_button = QtWidgets.QPushButton(self.tab)
        self.update_track_display_button.setGeometry(QtCore.QRect(982, 840, 121, 28))
        self.update_track_display_button.setObjectName("update_track_display_button")
        self.label_20 = QtWidgets.QLabel(self.tab)
        self.label_20.setGeometry(QtCore.QRect(990, 790, 71, 16))
        self.label_20.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_20.setTextFormat(QtCore.Qt.AutoText)
        self.label_20.setObjectName("label_20")
        self.track_color_box = QtWidgets.QComboBox(self.tab)
        self.track_color_box.setGeometry(QtCore.QRect(1060, 790, 41, 22))
        self.track_color_box.setToolTipDuration(1000000000)
        self.track_color_box.setObjectName("track_color_box")
        self.track_color_box.addItem("")
        self.track_color_box.addItem("")
        self.track_color_box.addItem("")
        self.track_color_box.addItem("")
        self.x_size_show = QtWidgets.QLCDNumber(self.tab)
        self.x_size_show.setGeometry(QtCore.QRect(180, 600, 64, 31))
        self.x_size_show.setToolTipDuration(1000000000)
        self.x_size_show.setStyleSheet("color: rgb(0, 0, 0);")
        self.x_size_show.setFrameShadow(QtWidgets.QFrame.Plain)
        self.x_size_show.setLineWidth(1)
        self.x_size_show.setMidLineWidth(1)
        self.x_size_show.setSmallDecimalPoint(False)
        self.x_size_show.setDigitCount(4)
        self.x_size_show.setMode(QtWidgets.QLCDNumber.Dec)
        self.x_size_show.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.x_size_show.setObjectName("x_size_show")
        self.label_21 = QtWidgets.QLabel(self.tab)
        self.label_21.setGeometry(QtCore.QRect(190, 580, 55, 16))
        self.label_21.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_21.setTextFormat(QtCore.Qt.AutoText)
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.tab)
        self.label_22.setGeometry(QtCore.QRect(270, 580, 55, 16))
        self.label_22.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_22.setTextFormat(QtCore.Qt.AutoText)
        self.label_22.setObjectName("label_22")
        self.y_size_show = QtWidgets.QLCDNumber(self.tab)
        self.y_size_show.setGeometry(QtCore.QRect(260, 600, 64, 31))
        self.y_size_show.setToolTipDuration(1000000000)
        self.y_size_show.setStyleSheet("color: rgb(0, 0, 0);")
        self.y_size_show.setFrameShadow(QtWidgets.QFrame.Plain)
        self.y_size_show.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.y_size_show.setObjectName("y_size_show")
        self.track_full_screen_button = QtWidgets.QPushButton(self.tab)
        self.track_full_screen_button.setGeometry(QtCore.QRect(992, 900, 111, 28))
        self.track_full_screen_button.setObjectName("track_full_screen_button")
        self.filename_label = QtWidgets.QLabel(self.tab)
        self.filename_label.setGeometry(QtCore.QRect(110, 60, 181, 16))
        self.filename_label.setToolTipDuration(1000000000)
        self.filename_label.setObjectName("filename_label")
        self.skip_image_button = QtWidgets.QPushButton(self.tab)
        self.skip_image_button.setGeometry(QtCore.QRect(10, 50, 93, 28))
        self.skip_image_button.setToolTipDuration(1000000000)
        self.skip_image_button.setObjectName("skip_image_button")
        self.folder_line_edit = QtWidgets.QLineEdit(self.tab)
        self.folder_line_edit.setGeometry(QtCore.QRect(170, 20, 561, 22))
        self.folder_line_edit.setToolTipDuration(1000000000)
        self.folder_line_edit.setObjectName("folder_line_edit")
        self.label_29 = QtWidgets.QLabel(self.tab)
        self.label_29.setGeometry(QtCore.QRect(110, 20, 81, 16))
        self.label_29.setStyleSheet("color: rgb(0,0,0);")
        self.label_29.setTextFormat(QtCore.Qt.AutoText)
        self.label_29.setObjectName("label_29")
        self.label_30 = QtWidgets.QLabel(self.tab)
        self.label_30.setGeometry(QtCore.QRect(0, 0, 1921, 981))
        self.label_30.setText("")
        self.label_30.setTextFormat(QtCore.Qt.AutoText)
        self.label_30.setPixmap(QtGui.QPixmap("Picture.jpg"))
        self.label_30.setScaledContents(True)
        self.label_30.setObjectName("label_30")
        self.label_30.raise_()
        self.image_crop_down_display.raise_()
        self.select_points_button.raise_()
        self.label.raise_()
        self.track_display.raise_()
        self.cost_display.raise_()
        self.sigmas_line_edit.raise_()
        self.label_17.raise_()
        self.label_16.raise_()
        self.power_box.raise_()
        self.lambda_box.raise_()
        self.label_15.raise_()
        self.update_os_button.raise_()
        self.os_progress_bar.raise_()
        self.show_os_button.raise_()
        self.update_cost_button.raise_()
        self.update_cost_bar.raise_()
        self.select_image_size.raise_()
        self.start_button.raise_()
        self.tracking_bar.raise_()
        self.midline_track_button.raise_()
        self.crack_color_box.raise_()
        self.downsample_factor_box.raise_()
        self.label_5.raise_()
        self.update_image_crop_button.raise_()
        self.label_2.raise_()
        self.color_chenel_box.raise_()
        self.label_3.raise_()
        self.x_margin_box.raise_()
        self.y_margin_box.raise_()
        self.label_4.raise_()
        self.middlepoint_display.raise_()
        self.middpoint_update_button.raise_()
        self.middle_point_button.raise_()
        self.wavelet_check_display.raise_()
        self.wavelet_button.raise_()
        self.wavelet_size_box.raise_()
        self.label_7.raise_()
        self.label_8.raise_()
        self.wavelet_norientations_box.raise_()
        self.wavelet_inflection_point_box.raise_()
        self.label_9.raise_()
        self.wavelet_overlap_factor_box.raise_()
        self.label_10.raise_()
        self.wavelet_STD_box.raise_()
        self.label_11.raise_()
        self.label_12.raise_()
        self.wavelet_window_size_box.raise_()
        self.wavelet_mnorder_box.raise_()
        self.label_13.raise_()
        self.line.raise_()
        self.g11_box.raise_()
        self.label_6.raise_()
        self.g22_box.raise_()
        self.g33_box.raise_()
        self.label_14.raise_()
        self.label_18.raise_()
        self.label_19.raise_()
        self.track_width_box.raise_()
        self.update_track_display_button.raise_()
        self.label_20.raise_()
        self.track_color_box.raise_()
        self.x_size_show.raise_()
        self.label_21.raise_()
        self.label_22.raise_()
        self.y_size_show.raise_()
        self.track_full_screen_button.raise_()
        self.filename_label.raise_()
        self.skip_image_button.raise_()
        self.folder_line_edit.raise_()
        self.label_29.raise_()
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.edge_map_display = QtWidgets.QLabel(self.tab_2)
        self.edge_map_display.setGeometry(QtCore.QRect(130, 0, 815, 450))
        self.edge_map_display.setFrameShape(QtWidgets.QFrame.Box)
        self.edge_map_display.setText("")
        self.edge_map_display.setAlignment(QtCore.Qt.AlignCenter)
        self.edge_map_display.setObjectName("edge_map_display")
        self.edge_mask_button = QtWidgets.QPushButton(self.tab_2)
        self.edge_mask_button.setGeometry(QtCore.QRect(40, 420, 93, 28))
        self.edge_mask_button.setObjectName("edge_mask_button")
        self.label_23 = QtWidgets.QLabel(self.tab_2)
        self.label_23.setGeometry(QtCore.QRect(0, 50, 55, 16))
        self.label_23.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_23.setObjectName("label_23")
        self.edge_filter_size_box = QtWidgets.QSpinBox(self.tab_2)
        self.edge_filter_size_box.setGeometry(QtCore.QRect(90, 50, 42, 22))
        self.edge_filter_size_box.setToolTipDuration(1000000000)
        self.edge_filter_size_box.setMaximum(99999)
        self.edge_filter_size_box.setProperty("value", 90)
        self.edge_filter_size_box.setObjectName("edge_filter_size_box")
        self.edge_tracks_display = QtWidgets.QLabel(self.tab_2)
        self.edge_tracks_display.setGeometry(QtCore.QRect(130, 470, 815, 450))
        self.edge_tracks_display.setFrameShape(QtWidgets.QFrame.Box)
        self.edge_tracks_display.setText("")
        self.edge_tracks_display.setTextFormat(QtCore.Qt.PlainText)
        self.edge_tracks_display.setAlignment(QtCore.Qt.AlignCenter)
        self.edge_tracks_display.setObjectName("edge_tracks_display")
        self.edge_tracks_button = QtWidgets.QPushButton(self.tab_2)
        self.edge_tracks_button.setGeometry(QtCore.QRect(40, 820, 93, 28))
        self.edge_tracks_button.setObjectName("edge_tracks_button")
        self.label_24 = QtWidgets.QLabel(self.tab_2)
        self.label_24.setGeometry(QtCore.QRect(20, 780, 71, 16))
        self.label_24.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.tab_2)
        self.label_25.setGeometry(QtCore.QRect(20, 740, 71, 16))
        self.label_25.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_25.setObjectName("label_25")
        self.edge_track_color_box = QtWidgets.QComboBox(self.tab_2)
        self.edge_track_color_box.setGeometry(QtCore.QRect(90, 780, 41, 22))
        self.edge_track_color_box.setObjectName("edge_track_color_box")
        self.edge_track_color_box.addItem("")
        self.edge_track_color_box.addItem("")
        self.edge_track_color_box.addItem("")
        self.edge_track_color_box.addItem("")
        self.edge_track_width_box = QtWidgets.QSpinBox(self.tab_2)
        self.edge_track_width_box.setGeometry(QtCore.QRect(90, 740, 42, 22))
        self.edge_track_width_box.setProperty("value", 1)
        self.edge_track_width_box.setObjectName("edge_track_width_box")
        self.edge_tracks_full_screen_button = QtWidgets.QPushButton(self.tab_2)
        self.edge_tracks_full_screen_button.setGeometry(QtCore.QRect(12, 890, 121, 28))
        self.edge_tracks_full_screen_button.setObjectName("edge_tracks_full_screen_button")
        self.mu_box = QtWidgets.QSpinBox(self.tab_2)
        self.mu_box.setGeometry(QtCore.QRect(90, 580, 42, 22))
        self.mu_box.setMaximum(999999)
        self.mu_box.setObjectName("mu_box")
        self.l_box = QtWidgets.QSpinBox(self.tab_2)
        self.l_box.setGeometry(QtCore.QRect(90, 610, 42, 22))
        self.l_box.setMaximum(9999999)
        self.l_box.setProperty("value", 5)
        self.l_box.setObjectName("l_box")
        self.p_box = QtWidgets.QSpinBox(self.tab_2)
        self.p_box.setGeometry(QtCore.QRect(90, 640, 42, 22))
        self.p_box.setMaximum(99999999)
        self.p_box.setSingleStep(2)
        self.p_box.setProperty("value", 14)
        self.p_box.setObjectName("p_box")
        self.label_26 = QtWidgets.QLabel(self.tab_2)
        self.label_26.setGeometry(QtCore.QRect(10, 580, 55, 16))
        self.label_26.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.tab_2)
        self.label_27.setGeometry(QtCore.QRect(10, 610, 55, 16))
        self.label_27.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_27.setObjectName("label_27")
        self.label_28 = QtWidgets.QLabel(self.tab_2)
        self.label_28.setGeometry(QtCore.QRect(10, 640, 55, 16))
        self.label_28.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_28.setObjectName("label_28")
        self.save_current_segment_button = QtWidgets.QPushButton(self.tab_2)
        self.save_current_segment_button.setGeometry(QtCore.QRect(970, 900, 141, 28))
        self.save_current_segment_button.setObjectName("save_current_segment_button")
        self.all_segments_display = QtWidgets.QLabel(self.tab_2)
        self.all_segments_display.setGeometry(QtCore.QRect(1030, 0, 871, 881))
        self.all_segments_display.setFrameShape(QtWidgets.QFrame.Box)
        self.all_segments_display.setText("")
        self.all_segments_display.setObjectName("all_segments_display")
        self.label_31 = QtWidgets.QLabel(self.tab_2)
        self.label_31.setGeometry(QtCore.QRect(0, 0, 1921, 981))
        self.label_31.setText("")
        self.label_31.setTextFormat(QtCore.Qt.AutoText)
        self.label_31.setPixmap(QtGui.QPixmap("Picture.jpg"))
        self.label_31.setScaledContents(True)
        self.label_31.setObjectName("label_31")
        self.label_31.raise_()
        self.edge_map_display.raise_()
        self.edge_mask_button.raise_()
        self.label_23.raise_()
        self.edge_filter_size_box.raise_()
        self.edge_tracks_display.raise_()
        self.edge_tracks_button.raise_()
        self.label_24.raise_()
        self.label_25.raise_()
        self.edge_track_color_box.raise_()
        self.edge_track_width_box.raise_()
        self.edge_tracks_full_screen_button.raise_()
        self.mu_box.raise_()
        self.l_box.raise_()
        self.p_box.raise_()
        self.label_26.raise_()
        self.label_27.raise_()
        self.label_28.raise_()
        self.save_current_segment_button.raise_()
        self.all_segments_display.raise_()
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.draw_segment_button = QtWidgets.QPushButton(self.tab_3)
        self.draw_segment_button.setGeometry(QtCore.QRect(20, 30, 101, 28))
        self.draw_segment_button.setToolTipDuration(1000000000)
        self.draw_segment_button.setObjectName("draw_segment_button")
        self.manual_segment_screen = QtWidgets.QLabel(self.tab_3)
        self.manual_segment_screen.setGeometry(QtCore.QRect(130, 10, 1771, 931))
        self.manual_segment_screen.setFrameShape(QtWidgets.QFrame.Box)
        self.manual_segment_screen.setText("")
        self.manual_segment_screen.setObjectName("manual_segment_screen")
        self.save_manuall_segment_button = QtWidgets.QPushButton(self.tab_3)
        self.save_manuall_segment_button.setGeometry(QtCore.QRect(20, 140, 101, 28))
        self.save_manuall_segment_button.setObjectName("save_manuall_segment_button")
        self.manual_segment_full_screen_button = QtWidgets.QPushButton(self.tab_3)
        self.manual_segment_full_screen_button.setGeometry(QtCore.QRect(20, 67, 101, 61))
        self.manual_segment_full_screen_button.setObjectName("manual_segment_full_screen_button")
        self.label_32 = QtWidgets.QLabel(self.tab_3)
        self.label_32.setGeometry(QtCore.QRect(0, 0, 1921, 981))
        self.label_32.setText("")
        self.label_32.setTextFormat(QtCore.Qt.AutoText)
        self.label_32.setPixmap(QtGui.QPixmap("Picture.jpg"))
        self.label_32.setScaledContents(True)
        self.label_32.setObjectName("label_32")
        self.label_32.raise_()
        self.draw_segment_button.raise_()
        self.manual_segment_screen.raise_()
        self.save_manuall_segment_button.raise_()
        self.manual_segment_full_screen_button.raise_()
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.original_image_display = QtWidgets.QLabel(self.tab_4)
        self.original_image_display.setGeometry(QtCore.QRect(0, 40, 950, 920))
        self.original_image_display.setFrameShape(QtWidgets.QFrame.Box)
        self.original_image_display.setText("")
        self.original_image_display.setObjectName("original_image_display")
        self.check_annotation_button = QtWidgets.QPushButton(self.tab_4)
        self.check_annotation_button.setGeometry(QtCore.QRect(10, 10, 121, 28))
        self.check_annotation_button.setObjectName("check_annotation_button")
        self.segmentation_mask_display = QtWidgets.QLabel(self.tab_4)
        self.segmentation_mask_display.setGeometry(QtCore.QRect(960, 40, 950, 920))
        self.segmentation_mask_display.setFrameShape(QtWidgets.QFrame.Box)
        self.segmentation_mask_display.setText("")
        self.segmentation_mask_display.setObjectName("segmentation_mask_display")
        self.save_annotation_button = QtWidgets.QPushButton(self.tab_4)
        self.save_annotation_button.setGeometry(QtCore.QRect(260, 10, 111, 28))
        self.save_annotation_button.setObjectName("save_annotation_button")
        self.label_33 = QtWidgets.QLabel(self.tab_4)
        self.label_33.setGeometry(QtCore.QRect(0, 0, 1921, 981))
        self.label_33.setText("")
        self.label_33.setPixmap(QtGui.QPixmap("1.jpg"))
        self.label_33.setScaledContents(True)
        self.label_33.setObjectName("label_33")
        self.label_33.raise_()
        self.original_image_display.raise_()
        self.check_annotation_button.raise_()
        self.segmentation_mask_display.raise_()
        self.save_annotation_button.raise_()
        self.tabWidget.addTab(self.tab_4, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1928, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.select_points_button.setToolTip(_translate("MainWindow", "<html><head/><body><p>Select TWO points on image (crack tips). </p><p>LMB click to select. </p><p>RMB click to undo previous selection. </p><p>Mouse wheel to zoom in/out </p><p>ESC to save and exit</p><p><br/></p></body></html>"))
        self.select_points_button.setText(_translate("MainWindow", "Select Crack End-Points"))
        self.label.setText(_translate("MainWindow", "Image size"))
        self.sigmas_line_edit.setToolTip(_translate("MainWindow", "<html><head/><body><p>Orientation scores processing parameter: adjust so that crack is highlited the most on cost function</p><p>Can be: (1);(1,2);(1,2,3)...</p><p><br/></p></body></html>"))
        self.sigmas_line_edit.setText(_translate("MainWindow", "1,2"))
        self.label_17.setText(_translate("MainWindow", "sigmas"))
        self.label_16.setText(_translate("MainWindow", "power"))
        self.power_box.setToolTip(_translate("MainWindow", "Orientation scores processing parameter: adjust so that crack is highlited the most on cost function"))
        self.lambda_box.setToolTip(_translate("MainWindow", "Orientation scores processing parameter: adjust so that crack is highlited the most on cost function"))
        self.label_15.setText(_translate("MainWindow", "lambda"))
        self.update_os_button.setText(_translate("MainWindow", "update OS"))
        self.show_os_button.setText(_translate("MainWindow", "Show OS"))
        self.update_cost_button.setText(_translate("MainWindow", "Update Cost"))
        self.select_image_size.setToolTip(_translate("MainWindow", "Changes window size for point selection"))
        self.start_button.setToolTip(_translate("MainWindow", "Start segmentain"))
        self.start_button.setText(_translate("MainWindow", "Start"))
        self.midline_track_button.setText(_translate("MainWindow", "Crack Track"))
        self.crack_color_box.setToolTip(_translate("MainWindow", "Select \"Dark crack\" if crack is darker then background, \"Bight crak\" otherwise"))
        self.crack_color_box.setItemText(0, _translate("MainWindow", "Dark crack"))
        self.crack_color_box.setItemText(1, _translate("MainWindow", "Bright crack"))
        self.downsample_factor_box.setToolTip(_translate("MainWindow", "Image downsample factor to reduce processing time"))
        self.label_5.setText(_translate("MainWindow", "Downsample factor"))
        self.update_image_crop_button.setText(_translate("MainWindow", "Update croped Image"))
        self.label_2.setText(_translate("MainWindow", "Color Chenel"))
        self.color_chenel_box.setToolTip(_translate("MainWindow", "Only one collor chennel used for image processing. Chose the one that gives the most crack contrast"))
        self.color_chenel_box.setItemText(0, _translate("MainWindow", "R"))
        self.color_chenel_box.setItemText(1, _translate("MainWindow", "G"))
        self.color_chenel_box.setItemText(2, _translate("MainWindow", "B"))
        self.label_3.setText(_translate("MainWindow", "x margin"))
        self.x_margin_box.setToolTip(_translate("MainWindow", "Increase if crack does not fit into image. Decrease to reduce processing time"))
        self.y_margin_box.setToolTip(_translate("MainWindow", "Increase if crack does not fit into image. Decrease to reduce processing time"))
        self.label_4.setText(_translate("MainWindow", "y margin"))
        self.middpoint_update_button.setText(_translate("MainWindow", "Update"))
        self.middle_point_button.setToolTip(_translate("MainWindow", "Select ONE point on image (crack middle point) to compare crack width with wavelet width (on the left)"))
        self.middle_point_button.setText(_translate("MainWindow", "Select crack point to check width"))
        self.wavelet_button.setText(_translate("MainWindow", "Check cake wavelet"))
        self.label_7.setText(_translate("MainWindow", "Wavelet size"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p>Number of orientations</p></body></html>"))
        self.wavelet_inflection_point_box.setToolTip(_translate("MainWindow", "<html><head/><body><p>Cake wavelet parameter: Adjust so thet the bright part of the wavelet has the same width as crack on image</p></body></html>"))
        self.label_9.setText(_translate("MainWindow", "Inflection Point"))
        self.label_10.setText(_translate("MainWindow", "Overlap factor"))
        self.label_11.setText(_translate("MainWindow", "STD"))
        self.label_12.setText(_translate("MainWindow", "Window size"))
        self.label_13.setText(_translate("MainWindow", "Mn Order"))
        self.g11_box.setToolTip(_translate("MainWindow", "Tracking parameter: adjust to get the best crack tracking result"))
        self.label_6.setText(_translate("MainWindow", "g11"))
        self.g22_box.setToolTip(_translate("MainWindow", "Tracking parameter: adjust to get the best crack tracking result"))
        self.g33_box.setToolTip(_translate("MainWindow", "Tracking parameter: adjust to get the best crack tracking result"))
        self.label_14.setText(_translate("MainWindow", "g22"))
        self.label_18.setText(_translate("MainWindow", "g33"))
        self.label_19.setText(_translate("MainWindow", "Track width"))
        self.track_width_box.setToolTip(_translate("MainWindow", "Track width on the vizualisation on the right"))
        self.update_track_display_button.setText(_translate("MainWindow", "Update track display"))
        self.label_20.setText(_translate("MainWindow", "Track color"))
        self.track_color_box.setToolTip(_translate("MainWindow", "Track color on the vizualisation on the right"))
        self.track_color_box.setCurrentText(_translate("MainWindow", "R"))
        self.track_color_box.setItemText(0, _translate("MainWindow", "R"))
        self.track_color_box.setItemText(1, _translate("MainWindow", "G"))
        self.track_color_box.setItemText(2, _translate("MainWindow", "B"))
        self.track_color_box.setItemText(3, _translate("MainWindow", "W"))
        self.x_size_show.setToolTip(_translate("MainWindow", "X size of image to process. Biger size - more processing time"))
        self.label_21.setText(_translate("MainWindow", "X size"))
        self.label_22.setText(_translate("MainWindow", "Y size"))
        self.y_size_show.setToolTip(_translate("MainWindow", "Y size of image to process. Biger size - more processing time"))
        self.track_full_screen_button.setText(_translate("MainWindow", "Track full screen"))
        self.filename_label.setToolTip(_translate("MainWindow", "Name of current image"))
        self.filename_label.setText(_translate("MainWindow", "TextLabel"))
        self.skip_image_button.setToolTip(_translate("MainWindow", "Skip current image (annotation file with empty annotation will be saved)"))
        self.skip_image_button.setText(_translate("MainWindow", "Skip Image"))
        self.folder_line_edit.setToolTip(_translate("MainWindow", "Enter folder with images"))
        self.folder_line_edit.setText(_translate("MainWindow", "C:\\Users\\20214106\\Desktop\\cracktools gui\\crack images"))
        self.label_29.setText(_translate("MainWindow", "Folder"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tracking"))
        self.edge_mask_button.setText(_translate("MainWindow", "Edge mask"))
        self.label_23.setText(_translate("MainWindow", "filter size"))
        self.edge_filter_size_box.setToolTip(_translate("MainWindow", "Determines how far from the crack track the algorithm looks for crack edges"))
        self.edge_tracks_button.setText(_translate("MainWindow", "Edge tracks"))
        self.label_24.setText(_translate("MainWindow", "Track color"))
        self.label_25.setText(_translate("MainWindow", "Track width"))
        self.edge_track_color_box.setCurrentText(_translate("MainWindow", "R"))
        self.edge_track_color_box.setItemText(0, _translate("MainWindow", "R"))
        self.edge_track_color_box.setItemText(1, _translate("MainWindow", "G"))
        self.edge_track_color_box.setItemText(2, _translate("MainWindow", "B"))
        self.edge_track_color_box.setItemText(3, _translate("MainWindow", "W"))
        self.edge_tracks_full_screen_button.setText(_translate("MainWindow", "Edge tracks full screen"))
        self.label_26.setText(_translate("MainWindow", "mu"))
        self.label_27.setText(_translate("MainWindow", "l"))
        self.label_28.setText(_translate("MainWindow", "p"))
        self.save_current_segment_button.setText(_translate("MainWindow", "Save segment"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Segmentation"))
        self.draw_segment_button.setToolTip(_translate("MainWindow", "<html><head/><body><p>Draw counturs of a crack manually</p><p>Wheel mause to zoom in/out</p><p>LMB hold to draw</p><p>LMB release to fix contur part</p><p>RMB to erase previouse contur part</p></body></html>"))
        self.draw_segment_button.setText(_translate("MainWindow", "Draw segment"))
        self.save_manuall_segment_button.setText(_translate("MainWindow", "Save segment"))
        self.manual_segment_full_screen_button.setText(_translate("MainWindow", "Show segment \n"
"full screen"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Add segment manually"))
        self.check_annotation_button.setText(_translate("MainWindow", "Check annotation"))
        self.save_annotation_button.setText(_translate("MainWindow", "Save annotation"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Save annotation"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
